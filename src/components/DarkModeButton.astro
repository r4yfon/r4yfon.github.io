<button
  class="simple-dark-toggle px-2 py-1 flex gap-x-1 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600"
  aria-label="Toggle dark mode"
  type="button">
  <span class="sun-icon hidden">
    <!-- Lucide Sun SVG -->
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="lucide lucide-sun-icon lucide-sun"
      ><circle cx="12" cy="12" r="4"></circle><path d="M12 2v2"></path><path
        d="M12 20v2"></path><path d="m4.93 4.93 1.41 1.41"></path><path
        d="m17.66 17.66 1.41 1.41"></path><path d="M2 12h2"></path><path
        d="M20 12h2"></path><path d="m6.34 17.66-1.41 1.41"></path><path
        d="m19.07 4.93-1.41 1.41"></path>
      <title>Toggle dark mode</title>
    </svg>
  </span>
  <span class="moon-icon hidden">
    <!-- Lucide Moon SVG -->
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="lucide lucide-moon-icon lucide-moon"
      ><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
      <title>Toggle dark mode</title>
    </svg>
  </span>
</button>

<script>
  // const checkbox = document.getElementById("dark") as HTMLInputElement;
  const sunIcon = document.getElementsByClassName("sun-icon");
  const moonIcon = document.getElementsByClassName("moon-icon");

  // Set initial state based on theme
  function setThemeIcons() {
    const isDark = document.documentElement.classList.contains("dark");
    // For both toggle and button, update icons
    if (sunIcon)
      Array.from(sunIcon).forEach((el) =>
        el.classList.toggle("hidden", isDark),
      );
    if (moonIcon)
      Array.from(moonIcon).forEach((el) =>
        el.classList.toggle("hidden", !isDark),
      );
  }

  // On load, set theme from localStorage or system preference
  if (
    localStorage.getItem("theme") === "dark" ||
    (!localStorage.getItem("theme") &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }
  setThemeIcons();

  const simpleDarkToggle =
    document.getElementsByClassName("simple-dark-toggle");
  if (simpleDarkToggle) {
    Array.from(simpleDarkToggle).forEach((toggleBtn) => {
      toggleBtn.addEventListener("click", () => {
        const isDark = document.documentElement.classList.contains("dark");
        if (!isDark) {
          document.documentElement.classList.add("dark");
          localStorage.setItem("theme", "dark");
        } else {
          document.documentElement.classList.remove("dark");
          localStorage.setItem("theme", "light");
        }
        setThemeIcons();
      });
    });
  }
</script>
